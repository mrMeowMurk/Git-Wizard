#!/usr/bin/env python3
import os
import sys
from datetime import datetime
from typing import List, Optional, Dict
from collections import defaultdict

import click
from git import Repo, GitCommandError, Commit, Diff
from rich.console import Console
from rich.table import Table
from rich.tree import Tree
from rich.panel import Panel
from rich.text import Text
from rich.syntax import Syntax
from prompt_toolkit import PromptSession
from prompt_toolkit.completion import WordCompleter
from prompt_toolkit.styles import Style

console = Console()

class GitWizard:
    def __init__(self, repo_path: str = "."):
        self.repo_path = os.path.abspath(repo_path)
        try:
            self.repo = Repo(self.repo_path)
        except GitCommandError:
            console.print(f"[red]–û—à–∏–±–∫–∞: –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è {repo_path} –Ω–µ —è–≤–ª—è–µ—Ç—Å—è Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–º[/red]")
            sys.exit(1)
        
        self.session = PromptSession()
        self.commands = [
            "status", "branch", "log", "commit", "checkout",
            "merge", "pull", "push", "search", "stats", "graph",
            "history", "changes", "filesearch", "filetypes", "diff"
        ]
        self.completer = WordCompleter(self.commands)
        self.style = Style.from_dict({
            'prompt': 'ansicyan bold',
        })

    def visualize_branches(self):
        """–í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –≤–µ—Ç–æ–∫ –≤ –≤–∏–¥–µ ASCII-–≥—Ä–∞—Ñ–∞"""
        tree = Tree("üå≥ [bold green]–í–µ—Ç–∫–∏[/bold green]")
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –≤–µ—Ç–∫–∏
        branches = self.repo.heads
        
        # –°–æ–∑–¥–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –≤–µ—Ç–∫—É
        main_branch = self.repo.active_branch
        main_tree = tree.add(f"üåø [bold yellow]{main_branch.name}[/bold yellow]")
        
        # –î–æ–±–∞–≤–ª—è–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ –≤–µ—Ç–∫–∏
        for branch in branches:
            if branch.name != main_branch.name:
                main_tree.add(f"üå± {branch.name}")
        
        console.print(tree)

    def visualize_history(self):
        """–í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –∏—Å—Ç–æ—Ä–∏–∏ –∫–æ–º–º–∏—Ç–æ–≤ –≤ –≤–∏–¥–µ –≥—Ä–∞—Ñ–∞"""
        commits = list(self.repo.iter_commits())
        if not commits:
            console.print("[yellow]–ò—Å—Ç–æ—Ä–∏—è –∫–æ–º–º–∏—Ç–æ–≤ –ø—É—Å—Ç–∞[/yellow]")
            return

        table = Table(title="–ò—Å—Ç–æ—Ä–∏—è –∫–æ–º–º–∏—Ç–æ–≤", show_header=True, header_style="bold magenta")
        table.add_column("–•–µ—à", style="cyan", width=8)
        table.add_column("–ê–≤—Ç–æ—Ä", style="green")
        table.add_column("–î–∞—Ç–∞", style="yellow")
        table.add_column("–°–æ–æ–±—â–µ–Ω–∏–µ", style="white")

        for commit in commits[:10]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 –∫–æ–º–º–∏—Ç–æ–≤
            table.add_row(
                commit.hexsha[:8],
                commit.author.name,
                datetime.fromtimestamp(commit.committed_date).strftime('%Y-%m-%d %H:%M'),
                commit.message.split('\n')[0]
            )

        console.print(table)

    def analyze_changes(self, commit_hash: Optional[str] = None):
        """–ê–Ω–∞–ª–∏–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ —Ñ–∞–π–ª–∞—Ö"""
        if commit_hash:
            try:
                commit = self.repo.commit(commit_hash)
            except ValueError:
                console.print(f"[red]–û—à–∏–±–∫–∞: –ö–æ–º–º–∏—Ç {commit_hash} –Ω–µ –Ω–∞–π–¥–µ–Ω[/red]")
                return
        else:
            commit = self.repo.head.commit

        stats = commit.stats.total
        files_changed = commit.stats.files

        console.print(Panel(f"[bold green]–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π[/bold green]"))
        console.print(f"–î–æ–±–∞–≤–ª–µ–Ω–æ —Å—Ç—Ä–æ–∫: [green]{stats['insertions']}[/green]")
        console.print(f"–£–¥–∞–ª–µ–Ω–æ —Å—Ç—Ä–æ–∫: [red]{stats['deletions']}[/red]")
        console.print(f"–ò–∑–º–µ–Ω–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: [yellow]{stats['files']}[/yellow]")

        table = Table(title="–ò–∑–º–µ–Ω–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã", show_header=True, header_style="bold magenta")
        table.add_column("–§–∞–π–ª", style="cyan")
        table.add_column("–î–æ–±–∞–≤–ª–µ–Ω–æ", style="green")
        table.add_column("–£–¥–∞–ª–µ–Ω–æ", style="red")

        for file, changes in files_changed.items():
            table.add_row(
                file,
                str(changes['insertions']),
                str(changes['deletions'])
            )

        console.print(table)

    def search_in_files(self, query: str):
        """–ü–æ–∏—Å–∫ –ø–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–º—É —Ñ–∞–π–ª–æ–≤"""
        results = []
        for root, _, files in os.walk(self.repo_path):
            if '.git' in root:
                continue
            for file in files:
                file_path = os.path.join(root, file)
                try:
                    with open(file_path, 'r', encoding='utf-8') as f:
                        content = f.read()
                        if query.lower() in content.lower():
                            results.append(file_path)
                except Exception:
                    continue

        if not results:
            console.print(f"[yellow]–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ –∑–∞–ø—Ä–æ—Å—É: {query}[/yellow]")
            return

        table = Table(title=f"–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞: {query}")
        table.add_column("–§–∞–π–ª", style="cyan")
        
        for file in results:
            table.add_row(file)

        console.print(table)

    def analyze_file_types(self):
        """–ê–Ω–∞–ª–∏–∑ —Ç–∏–ø–æ–≤ —Ñ–∞–π–ª–æ–≤ –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏"""
        file_types = defaultdict(int)
        total_files = 0

        for root, _, files in os.walk(self.repo_path):
            if '.git' in root:
                continue
            for file in files:
                total_files += 1
                ext = os.path.splitext(file)[1].lower()
                if ext:
                    file_types[ext] += 1
                else:
                    file_types['–±–µ–∑ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è'] += 1

        table = Table(title="–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ç–∏–ø–∞–º —Ñ–∞–π–ª–æ–≤")
        table.add_column("–¢–∏–ø —Ñ–∞–π–ª–∞", style="cyan")
        table.add_column("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ", style="magenta")
        table.add_column("–ü—Ä–æ—Ü–µ–Ω—Ç", style="green")

        for ext, count in sorted(file_types.items(), key=lambda x: x[1], reverse=True):
            percentage = (count / total_files) * 100
            table.add_row(
                ext or '–±–µ–∑ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è',
                str(count),
                f"{percentage:.1f}%"
            )

        console.print(table)

    def search_commits(self, query: str):
        """–ü–æ–∏—Å–∫ –∫–æ–º–º–∏—Ç–æ–≤ –ø–æ —Å–æ–æ–±—â–µ–Ω–∏—é –∏–ª–∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–º—É"""
        table = Table(title=f"–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞: {query}")
        table.add_column("–•–µ—à", style="cyan")
        table.add_column("–ê–≤—Ç–æ—Ä", style="magenta")
        table.add_column("–î–∞—Ç–∞", style="green")
        table.add_column("–°–æ–æ–±—â–µ–Ω–∏–µ", style="white")

        for commit in self.repo.iter_commits():
            if query.lower() in commit.message.lower():
                table.add_row(
                    commit.hexsha[:8],
                    commit.author.name,
                    datetime.fromtimestamp(commit.committed_date).strftime('%Y-%m-%d %H:%M'),
                    commit.message.split('\n')[0]
                )

        console.print(table)

    def show_activity_stats(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ –∞–≤—Ç–æ—Ä–∞–º"""
        stats = {}
        
        for commit in self.repo.iter_commits():
            author = commit.author.name
            if author not in stats:
                stats[author] = 0
            stats[author] += 1

        table = Table(title="–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏")
        table.add_column("–ê–≤—Ç–æ—Ä", style="cyan")
        table.add_column("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–º–∏—Ç–æ–≤", style="magenta")

        for author, count in sorted(stats.items(), key=lambda x: x[1], reverse=True):
            table.add_row(author, str(count))

        console.print(table)

    def show_diff(self, commit_hash: Optional[str] = None, file_path: Optional[str] = None):
        """–ü–æ–∫–∞–∑–∞—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ñ–∞–π–ª–∞—Ö"""
        try:
            if commit_hash:
                commit = self.repo.commit(commit_hash)
            else:
                # –ï—Å–ª–∏ —Ö–µ—à –Ω–µ —É–∫–∞–∑–∞–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ä–∞–±–æ—á–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
                if self.repo.is_dirty():
                    console.print("[yellow]–ï—Å—Ç—å –Ω–µ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ä–∞–±–æ—á–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏[/yellow]")
                    return
                commit = self.repo.head.commit

            if file_path:
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
                try:
                    diff = commit.diff(commit.parents[0] if commit.parents else None, paths=[file_path])
                    if not diff:
                        console.print(f"[yellow]–§–∞–π–ª {file_path} –Ω–µ –±—ã–ª –∏–∑–º–µ–Ω–µ–Ω –≤ —ç—Ç–æ–º –∫–æ–º–º–∏—Ç–µ[/yellow]")
                        return
                except ValueError:
                    console.print(f"[red]–û—à–∏–±–∫–∞: –§–∞–π–ª {file_path} –Ω–µ –Ω–∞–π–¥–µ–Ω[/red]")
                    return
            else:
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–ª—è –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤
                diff = commit.diff(commit.parents[0] if commit.parents else None)

            if not diff:
                console.print("[yellow]–ù–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è[/yellow]")
                return

            console.print(Panel(f"[bold green]–ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ –∫–æ–º–º–∏—Ç–µ {commit.hexsha[:8]}[/bold green]"))
            console.print(f"–ê–≤—Ç–æ—Ä: {commit.author.name}")
            console.print(f"–î–∞—Ç–∞: {datetime.fromtimestamp(commit.committed_date).strftime('%Y-%m-%d %H:%M')}")
            console.print(f"–°–æ–æ–±—â–µ–Ω–∏–µ: {commit.message.split('\n')[0]}\n")

            for diff_item in diff:
                if diff_item.a_path:
                    console.print(Panel(f"[bold cyan]–§–∞–π–ª: {diff_item.a_path}[/bold cyan]"))
                    
                    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–∑–º–µ–Ω–µ–Ω–∏–π
                    try:
                        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–∑ diff_item
                        diff_text = diff_item.diff.decode('utf-8') if isinstance(diff_item.diff, bytes) else str(diff_item.diff)
                        insertions = sum(1 for line in diff_text.split('\n') if line.startswith('+') and not line.startswith('+++'))
                        deletions = sum(1 for line in diff_text.split('\n') if line.startswith('-') and not line.startswith('---'))
                        
                        console.print(f"–î–æ–±–∞–≤–ª–µ–Ω–æ —Å—Ç—Ä–æ–∫: [green]{insertions}[/green]")
                        console.print(f"–£–¥–∞–ª–µ–Ω–æ —Å—Ç—Ä–æ–∫: [red]{deletions}[/red]")
                    except Exception as e:
                        console.print(f"[yellow]–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Å—á–∏—Ç–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–∑–º–µ–Ω–µ–Ω–∏–π: {str(e)}[/yellow]")
                    
                    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º diff —Å –ø–æ–¥—Å–≤–µ—Ç–∫–æ–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞
                    try:
                        diff_text = diff_item.diff.decode('utf-8') if isinstance(diff_item.diff, bytes) else str(diff_item.diff)
                        syntax = Syntax(diff_text, "diff", theme="monokai")
                        console.print(syntax)
                    except Exception as e:
                        console.print(f"[red]–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ diff: {str(e)}[/red]")
                    
                    console.print()  # –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–ª—è —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è

        except Exception as e:
            console.print(f"[red]–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫–∞–∑–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π: {str(e)}[/red]")

    def run(self):
        """–ó–∞–ø—É—Å–∫ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞"""
        console.print("[bold green]–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ GitWizard![/bold green]")
        console.print("–í–≤–µ–¥–∏—Ç–µ 'help' –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥ –∏–ª–∏ 'exit' –¥–ª—è –≤—ã—Ö–æ–¥–∞")

        while True:
            try:
                command = self.session.prompt(
                    "gitwizard> ",
                    completer=self.completer,
                    style=self.style
                ).strip()

                if command == "exit":
                    break
                elif command == "help":
                    self.show_help()
                elif command == "graph":
                    self.visualize_branches()
                elif command == "history":
                    self.visualize_history()
                elif command.startswith("changes"):
                    parts = command.split()
                    commit_hash = parts[1] if len(parts) > 1 else None
                    self.analyze_changes(commit_hash)
                elif command.startswith("diff"):
                    parts = command.split()
                    if len(parts) == 1:
                        self.show_diff()
                    elif len(parts) == 2:
                        self.show_diff(commit_hash=parts[1])
                    elif len(parts) == 3:
                        self.show_diff(commit_hash=parts[1], file_path=parts[2])
                elif command.startswith("filesearch "):
                    query = command[11:]
                    self.search_in_files(query)
                elif command == "filetypes":
                    self.analyze_file_types()
                elif command.startswith("search "):
                    query = command[7:]
                    self.search_commits(query)
                elif command == "stats":
                    self.show_activity_stats()
                else:
                    console.print(f"[yellow]–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: {command}[/yellow]")

            except KeyboardInterrupt:
                continue
            except EOFError:
                break

    def show_help(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É –ø–æ –∫–æ–º–∞–Ω–¥–∞–º"""
        help_text = """
[bold cyan]–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:[/bold cyan]
  graph      - –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –≤–µ—Ç–æ–∫
  history    - –ò—Å—Ç–æ—Ä–∏—è –∫–æ–º–º–∏—Ç–æ–≤
  changes    - –ê–Ω–∞–ª–∏–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: —Ö–µ—à –∫–æ–º–º–∏—Ç–∞)
  diff       - –ü–æ–∫–∞–∑–∞—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: —Ö–µ—à –∫–æ–º–º–∏—Ç–∞ –∏ –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É)
  filesearch - –ü–æ–∏—Å–∫ –ø–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–º—É —Ñ–∞–π–ª–æ–≤
  filetypes  - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ç–∏–ø–∞–º —Ñ–∞–π–ª–æ–≤
  search     - –ü–æ–∏—Å–∫ –∫–æ–º–º–∏—Ç–æ–≤
  stats      - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
  help       - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É
  exit       - –í—ã–π—Ç–∏ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã
        """
        console.print(help_text)

@click.command()
@click.argument('repo_path', default='.')
def main(repo_path: str):
    """GitWizard - –£–ª—É—á—à–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Git"""
    wizard = GitWizard(repo_path)
    wizard.run()

if __name__ == '__main__':
    main() 